language: c
compiler:
  - gcc
  - clang

dist: xenial

cache: ccache

env:
  global:
  - PATH="${PWD}/installdir/usr/local/bin:${PATH}"
  - PKG_CONFIG_PATH="${PWD}/installdir/usr/local/lib/pkgconfig:/usr/lib/pkgconfig"
  - LD_LIBRARY_PATH="${PWD}/installdir/usr/local/lib:/usr/lib"
  - ACLOCAL_PATH="${PWD}/installdir/usr/local/share/aclocal"

addons:
  apt:
    packages:
    - autoconf
    - autoconf-archive
    - automake
    - build-essential
    - realpath
    - lcov
    - libgcrypt20-dev
    - liboath-dev
    - libqrencode-dev
    - pandoc
    - libplymouth-dev
    - plymouth
    - fakeroot
    - doxygen
    - libjson-c-dev
    - libtasn1-dev
    - expect
    - socat
    - python3-setuptools
    - libseccomp-dev

install:
  - git clean -xdf
  - mkdir -p installdir/usr/local/bin
# TPM Simulator
  - git clone --branch=v0.7.3 --depth=1 https://github.com/stefanberger/libtpms.git
  - pushd libtpms
  - autoreconf --install --force
  - ./configure --prefix="$PWD/../installdir/usr/local" --with-openssl --with-tpm2
  - make -j$(nproc) install
  - popd
  - git clone --branch=v0.4.1 --depth=1 https://github.com/stefanberger/swtpm.git
  - pushd swtpm
  - autoreconf --install --force
  - ./configure --prefix="$PWD/../installdir/usr/local"
  - make -j$(nproc) install
  - popd
# Autoconf archives
  - wget https://ftpmirror.gnu.org/autoconf-archive/autoconf-archive-2019.01.06.tar.xz
  - sha256sum autoconf-archive-2019.01.06.tar.xz | grep -q 17195c833098da79de5778ee90948f4c5d90ed1a0cf8391b4ab348e2ec511e3f || travis_terminate 1
  - tar xJf autoconf-archive-2019.01.06.tar.xz
  - pushd autoconf-archive-2019.01.06
  - ./configure --prefix="$PWD/../installdir/usr/local"
  - make -j$(nproc) install
  - popd
# TPM2-TSS
  - git clone --depth=1 -b 3.0.x https://github.com/tpm2-software/tpm2-tss.git
  - pushd tpm2-tss
  - ./bootstrap
  - ./configure --prefix=${PWD}/../installdir/usr/local --disable-doxygen-doc
  - make -j$(nproc)
  - make install
  - rm ${PWD}/../installdir/usr/local/lib/*.la
  - popd
# tpm2-tools
  - git clone --depth=1 -b 4.X https://github.com/tpm2-software/tpm2-tools.git
  - pushd tpm2-tools
  - mkdir m4 || true
  - ./bootstrap
  # Some workarounds for tpm2-tools with -Wno-XXX
  - ./configure --disable-hardening CFLAGS="-I${PWD}/../installdir/usr/local/include -Wno-unused-value -Wno-missing-field-initializer" LDFLAGS=-L${PWD}/../installdir/usr/local/lib --prefix=${PWD}/../installdir/usr/local --with-bashcompdir=${PWD}/../installdir/usr/local/share/bash-completion/completions
  - make -j$(nproc)
  - make install
  - popd

before_script:
  - ./bootstrap

script:
# build with all tests enabled
  - CONFIGURE_OPTIONS="CFLAGS=-I${PWD}/installdir/usr/local/include LDFLAGS=-L${PWD}/installdir/usr/local/lib "
  - ./bootstrap
  - mkdir ./build
  - pushd ./build
  - |
    if [ "$CC" == "gcc" ]; then
      export CONFIGURE_OPTIONS+=" --enable-code-coverage";
    else
      export SCAN_PREFIX="scan-build --status-bugs"
    fi
  - $SCAN_PREFIX ../configure $CONFIGURE_OPTIONS --enable-integration --enable-plymouth
  - $SCAN_PREFIX make -j$(nproc)
  - make -j$(nproc) check
  - cat test-suite.log
  - make -j$(nproc) distcheck
  - cat tpm2-totp-*/_build/sub/test-suite.log config.log || true
  - popd
# Check for whitespace errors
  - git diff --check $(git hash-object -t tree /dev/null)

after_success:
  - |
    if [ "$CC" == "gcc" ]; then
        bash <(curl -s https://codecov.io/bash)
    fi
